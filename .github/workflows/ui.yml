name: Build-UI

on:
  push:
    paths:
      - ".github/workflows/ui.yml"
      - "forgerock-openbanking-ui/**"

env:
  GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Run tests
        working-directory: ./forgerock-openbanking-ui
        run: |
          npm ci
          npm run test.ci
          ./node_modules/@angular/cli/bin/ng lint
      - name: Prepare customers
        working-directory: ./forgerock-openbanking-ui
        run: git clone https://$GITHUB_ACCESS_TOKEN@github.com/ForgeCloud/ob-customers.git customers
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: customers
          path: forgerock-openbanking-ui/customers
  # build_bank_ui:
  #   runs-on: ubuntu-latest
  #   needs: prepare
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2
  #     - working-directory: ./forgerock-openbanking-ui
  #       id: version
  #       run: |
  #         export BUILD_VERSION=$(jq -r ".project_version" package.json)-${GITHUB_SHA::7}
  #         echo "::set-output name=BUILD_VERSION::$BUILD_VERSION"
  #     - name: Download Artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: customers
  #         path: forgerock-openbanking-ui/customers
  #     - working-directory: ./forgerock-openbanking-ui
  #       run: cp -R ./customers/* themes/
  #     - uses: whoan/docker-build-with-cache-action@v2
  #       with:
  #         username: ${{ secrets.CODEFRESH_DOCKER_REGISTRY_USERNAME }}
  #         password: "${{ secrets.CODEFRESH_DOCKER_REGISTRY_API_KEY }}"
  #         registry: r.cfcr.io
  #         image_name: obri/bank-ui
  #         image_tag: ${{ steps.version.outputs.BUILD_VERSION }}
  #         context: ./forgerock-openbanking-ui
  #         dockerfile: projects/bank/docker/Dockerfile
  #         push_image_and_stages: false
  # build_manual_onboarding:
  #   runs-on: ubuntu-latest
  #   needs: prepare
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2
  #     - working-directory: ./forgerock-openbanking-ui
  #       id: version
  #       run: |
  #         export BUILD_VERSION=$(jq -r ".project_version" package.json)-${GITHUB_SHA::7}
  #         echo "::set-output name=BUILD_VERSION::$BUILD_VERSION"
  #     - name: Download Artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: customers
  #         path: forgerock-openbanking-ui/customers
  #     - working-directory: ./forgerock-openbanking-ui
  #       run: cp -R ./customers/* themes/
  #     - uses: whoan/docker-build-with-cache-action@v2
  #       with:
  #         username: ${{ secrets.CODEFRESH_DOCKER_REGISTRY_USERNAME }}
  #         password: "${{ secrets.CODEFRESH_DOCKER_REGISTRY_API_KEY }}"
  #         registry: r.cfcr.io
  #         image_name: obri/manual-onboarding
  #         image_tag: ${{ steps.version.outputs.BUILD_VERSION }}
  #         context: ./forgerock-openbanking-ui
  #         dockerfile: projects/manual-onboarding/docker/Dockerfile
  #         push_image_and_stages: false
  update_ob_deploy:
    runs-on: ubuntu-latest
    # needs: [build_manual_onboarding, build_bank_ui]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: "forgeCloud/ob-deploy"
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          path: current
      - working-directory: ./current/forgerock-openbanking-ui
        id: version
        run: |
          export BUILD_VERSION=$(jq -r ".project_version" package.json)-${GITHUB_SHA::7}
          echo "::set-output name=BUILD_VERSION::$BUILD_VERSION"
      - name: Commit ob-deploy version update
        run: |
          jq -M  '[ .[] | if ((.service == "bank-ui" or .service == "manual-onboarding") and (.helmReference  | contains("obri-helm-charts/ui-template"))) then .version |= "${{ steps.version.outputs.BUILD_VERSION }}" else . end ]' client_releases/master-dev/releases.json > client_releases/master-dev/releases.json.tmp
          mv client_releases/master-dev/releases.json.tmp client_releases/master-dev/releases.json
          git config --global user.email "codefresh@codefresh.io"
          git config --global user.name "Codefresh"
          git add client_releases/master-dev/releases.json
          git commit --allow-empty -m "Bumping Bank & Register UI version ${{ steps.version.outputs.BUILD_VERSION }}"
      - name: Temporarily disable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access-token: ${{ secrets.ACCESS_TOKEN }}
          enforce_admins: false
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          branch: master
      - name: Enable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access-token: ${{ secrets.ACCESS_TOKEN }}
          enforce_admins: true
