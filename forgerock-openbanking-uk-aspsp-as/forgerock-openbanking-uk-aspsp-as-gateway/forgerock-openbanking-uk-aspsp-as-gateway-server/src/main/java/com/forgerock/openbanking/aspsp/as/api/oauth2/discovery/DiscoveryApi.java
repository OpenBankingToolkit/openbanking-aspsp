/**
 * Copyright 2019 ForgeRock AS.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.forgerock.openbanking.aspsp.as.api.oauth2.discovery;

import com.forgerock.openbanking.common.model.as.discovery.OIDCDiscoveryResponse;
import com.forgerock.openbanking.exceptions.OBErrorResponseException;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.servlet.http.HttpServletRequest;


@Api(tags = "Discovery", description = "the discovery API")
@RequestMapping(
        value = "/oauth2/.well-known"
)
public interface DiscoveryApi {
    String CURRENT_VERSION = "3.1.3";

    @ApiOperation(
            value = "OAuth2 discovery, also called well-known endpoint",
            response = OIDCDiscoveryResponse.class,
            tags = {"Discovery",}
    )
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "TPP registered with success",
                    response = OIDCDiscoveryResponse.class)
    })

    @RequestMapping(
            value = "/openid-configuration",
            produces = {"application/json; charset=utf-8"},
            method = RequestMethod.GET
    )
    ResponseEntity<OIDCDiscoveryResponse> getDiscovery(
            HttpServletRequest request
    ) throws OBErrorResponseException;
}
